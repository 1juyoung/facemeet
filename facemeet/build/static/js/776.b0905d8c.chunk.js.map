{"version":3,"file":"static/js/776.b0905d8c.chunk.js","mappings":"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","sources":["components/MeetingListStyle.js","components/MeetingList.js","components/Feed.js","components/Layout.js","pages/Friend.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction MeetingListStyle({ meeting, onClick = () => { } }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleButtonClick = () => {\r\n    if (typeof onClick === 'function') {\r\n      onClick(meeting);\r\n    }\r\n    // meetingId가 제대로 있는지 확인\r\n    if (!meeting.meetingId) {\r\n      console.error(\"Error: meetingId is undefined or null\", meeting);\r\n      return; // meetingId가 없으면 이동하지 않음\r\n    }\r\n\r\n    console.log(\"Navigating to meeting detail with meetingId:\", meeting.meetingId);\r\n    navigate(`/meetingdetail/${meeting.meetingId}`);\r\n    // 고유 meetingId를 사용해 해당 미팅의 디테일 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      key={meeting.meetingId}\r\n      variant=\"contained\"\r\n      className={`custom-Button`}\r\n      style={{\r\n        backgroundColor: '#97F7B8',\r\n        marginTop: '1rem',\r\n        width: '10rem',\r\n        height: '4rem',\r\n        borderRadius: '10%',\r\n        border: `none`,\r\n        padding: '1.5px',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        fontWeight: 'bold'\r\n      }}\r\n      sx={{\r\n        '&:hover': {\r\n          backgroundColor: '#2a9551 !important',\r\n        },\r\n      }}\r\n      onClick={handleButtonClick}\r\n    >\r\n      <Typography variant=\"body2\" align='center' sx={{ color: 'black' }}>\r\n        {meeting.meetingTitle || 'No Title'}\r\n      </Typography>\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default MeetingListStyle;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Box } from '@mui/material';\r\nimport { grey } from '@mui/material/colors';\r\nimport MeetingListStyle from './MeetingListStyle';\r\n\r\n\r\nfunction MeetingList() {\r\n\r\n    const [meetings, setMeetingList] = useState([]);  // 변수 이름 변경\r\n    const userId = localStorage.getItem('userId');\r\n    const URL = `http://localhost:4000/meeting/user-meetings/${userId}/`;\r\n    /* 해당 회의 사진이 없을 경우 회의 이름이 사진으로 뜨게끔 설정해야함. */\r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get(URL)\r\n            .then(response => {\r\n                const data = response.data;\r\n                setMeetingList(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('데이터를 불러오는 중 에러 발생함:', error);\r\n            });\r\n\r\n    }, []);\r\n\r\n    if (!meetings) return <div>loading</div>;\r\n\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                marginBottom: '1rem',\r\n                height: '100%',\r\n                width: '87.5%',\r\n                padding: '1.5rem',\r\n                overflowY: 'auto', // 영역이 부족할 때만 스크롤 허용\r\n                border: `1px solid ${grey[200]}`,\r\n                borderRadius: '2px',\r\n                '> div + div': {\r\n                    marginTop: '0.5rem',\r\n                },\r\n                '> img': {\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    borderRadius: '15%',\r\n                    objectFit: 'cover',\r\n                },\r\n                '> span + span': {\r\n                    marginLeft: '0.5rem',\r\n                },\r\n            }}\r\n        >\r\n            {meetings.map((meeting) => (\r\n                <MeetingListStyle key={meeting.meetingId} meeting={meeting} />\r\n            ))}\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default MeetingList;","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport axios from 'axios';\r\nimport MeetingList from './MeetingList';\r\nimport MeetingLogo from './MeetingLogo.png';\r\nimport './Style.css';\r\nimport { CiMicrophoneOff, CiMicrophoneOn, CiVideoOff, CiVideoOn, CiSettings } from \"react-icons/ci\";\r\n\r\n\r\nconst Feed = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [isMicOn, setIsMicOn] = useState(true);\r\n    const [isVideoOn, setIsVideoOn] = useState(true);\r\n    const [profileList, setProfileList] = useState();\r\n    const [meetings, setMeetings] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        axios.get(`http://localhost:4000/mypage?userId=${userId}`)\r\n            .then(response => {\r\n                const data = response.data;\r\n                setProfileList(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('데이터를 불러오는 중 에러 발생:', error);\r\n            });\r\n\r\n\r\n        axios.get(`http://localhost:4000/meeting/user-meetings/${userId}/`)\r\n            .then(response => {\r\n                setMeetings(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching meetings:', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const toggleMic = (event) => {\r\n        event.stopPropagation(); // 이벤트 버블링 방지\r\n        setIsMicOn(prevState => !prevState);\r\n        document.getElementById('mic').classList.toggle('icon-on');\r\n    };\r\n\r\n    const toggleVideo = (event) => {\r\n        event.stopPropagation(); // 이벤트 버블링 방지\r\n        setIsVideoOn(prevState => !prevState);\r\n        document.getElementById('video').classList.toggle('icon-on');\r\n    };\r\n\r\n\r\n    if (!meetings) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Layout'>\r\n            <Box\r\n                component=\"main\"\r\n                sx={{\r\n                    display: 'grid',\r\n                    maxHeight: '93vh',\r\n                    gridTemplateColumns: {\r\n                        xs: 'repeat(6, 1fr)',\r\n                        sm: 'repeat(6, 1fr)',\r\n                        md: 'repeat(6, 1fr)',\r\n                    },\r\n                    gridTemplateRows: {\r\n                        xs: 'repeat(6, 1fr) minmax(0, 1fr) repeat(4, 1fr)',\r\n                        sm: 'repeat(6, 1fr)',\r\n                        md: 'repeat(6, 1fr)',\r\n                    },\r\n                    columnGap: '1rem',\r\n                    marginX: 'auto',\r\n                    marginY: 'auto',\r\n                }}\r\n            >\r\n                <Box\r\n                    component=\"section\"\r\n                    sx={{\r\n                        gridColumn: '1 / 2',\r\n                        gridRow: '2 / 6',\r\n                        display: 'fle',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'flex-end'\r\n                    }}\r\n                >\r\n                    <MeetingList sx={{ height: '100%' }} />\r\n                    {meetings.map(meeting => (\r\n                        <div key={`key-${meeting.meetingId}`} >\r\n\r\n                        </div>\r\n                    ))}\r\n                    <Box sx={{\r\n                        position: 'relative',\r\n                        paddingTop: '3%',\r\n                        width: '16.3rem',\r\n                        height: '10rem',\r\n                    }} >\r\n                        <Box sx={{\r\n                            position: 'relative',\r\n                            backgroundColor: 'grey',\r\n                            marginLeft: '4%',\r\n                            marginTop: '1.5%',\r\n                            width: '3rem',\r\n                            height: '3rem',\r\n                            borderRadius: '15%',\r\n                        }} >\r\n                            <Box\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    bottom: '0',\r\n                                    right: '0',\r\n                                    width: '17px',\r\n                                    height: '17px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: profileList && profileList.length > 0 && profileList[0].state ? '#4EE080' : '#FF8A00',\r\n                                    border: '1px solid white',\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                        <div style={{\r\n                            position: 'relative',\r\n                            marginLeft: '27%',\r\n                            marginTop: '-16%',\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n                            {profileList && profileList.user_id}\r\n                        </div>\r\n\r\n                        {/* {profileList.nickname (\r\n                            <div style={{\r\n                                fontSize: '0.8rem',\r\n                                position: 'relative',\r\n                                marginLeft: '27%',\r\n                                marginTop: '0%',\r\n                                fontWeight: 'bold'\r\n                            }}>\r\n                                {profileList[0].state ? '온라인' : '오프라인'}\r\n                            </div>\r\n                        )}*/ }\r\n\r\n                        <div id='mic' className=\"icon-wrapper\" onClick={toggleMic}> {isMicOn ? <CiMicrophoneOn /> : <CiMicrophoneOff />} </div>\r\n\r\n                        <div id='video' className=\"icon-wrapper\" onClick={toggleVideo}> {isVideoOn ? <CiVideoOn /> : <CiVideoOff />} </div>\r\n\r\n                        <div id='setting' onClick={() => navigate('/NoteDetail')}><CiSettings /> </div>\r\n                    </Box>\r\n                </Box>\r\n                {/* Logo */}\r\n                <Box\r\n                    sx={{\r\n                        gridColumn: '1 / -1',\r\n                        gridRow: '1 / 2',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        border: '2px solid #ccc', // 그리드의 두께와 색상 지정\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={MeetingLogo}\r\n                        alt=\"Meeting 로고\"\r\n                        style={{ width: '15rem', height: '8rem' }}\r\n                        onClick={() => navigate('/Home')}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport './Style.css';\r\nimport Feed from './Feed';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <>\r\n            <div id='box'></div>\r\n            <div id='boxright'></div>\r\n            <div id='boxbottom'></div>\r\n            <Feed />\r\n            <main id=\"main\" role=\"main\">\r\n                {props.children}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Layout from '../components/Layout';\r\nimport '../components/Friend.css';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction Friend() {\r\n  const [friendList, setFriendList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/testData.json')\r\n      .then(response => {\r\n        const data = response.data.Profile;\r\n        setFriendList(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('데이터를 불러오는 중 에러 발생:', error);\r\n      });\r\n  }, []);\r\n\r\n  // friendList가 존재하고 첫 번째 친구 데이터만을 가져옴\r\n  const firstFriend = friendList.length > 0 ? friendList[0] : null;\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"Friend box\">\r\n        {firstFriend && ( // firstFriend가 존재할 때만 렌더링\r\n          <div>\r\n            <h1>\r\n              <h2>\r\n                <p1>{firstFriend.name}</p1>\r\n              </h2>\r\n              <h3></h3>\r\n              <h4>\r\n                <p2>닉네임</p2>\r\n                <input type=\"text\" className=\"text-input\" placeholder={firstFriend.name}></input>\r\n                <p3>메모</p3>\r\n                <textarea rows=\"5\" cols=\"30\" className=\"text-area\"></textarea>\r\n              </h4>\r\n            </h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Friend;"],"names":["_ref","meeting","onClick","navigate","useNavigate","_jsx","Button","variant","className","style","backgroundColor","marginTop","width","height","borderRadius","border","padding","textAlign","display","flexDirection","justifyContent","fontWeight","sx","handleButtonClick","meetingId","console","log","error","children","Typography","align","color","meetingTitle","meetings","setMeetingList","useState","URL","localStorage","getItem","useEffect","axios","get","then","response","data","catch","Box","alignItems","marginBottom","overflowY","grey","objectFit","marginLeft","map","MeetingListStyle","Feed","isMicOn","setIsMicOn","isVideoOn","setIsVideoOn","profileList","setProfileList","setMeetings","userId","_jsxs","component","maxHeight","gridTemplateColumns","xs","sm","md","gridTemplateRows","columnGap","marginX","marginY","gridColumn","gridRow","MeetingList","position","paddingTop","bottom","right","length","state","user_id","id","event","stopPropagation","prevState","document","getElementById","classList","toggle","CiMicrophoneOn","CiMicrophoneOff","CiVideoOn","CiVideoOff","CiSettings","src","MeetingLogo","alt","props","_Fragment","role","friendList","setFriendList","Profile","firstFriend","Layout","name","type","placeholder","rows","cols"],"sourceRoot":""}